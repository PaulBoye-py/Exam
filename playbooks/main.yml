---
- name: Deploy LAMP on a slave using ansible
  hosts: altschool-slave
  become: yes # Perform all the Ansible playbook tasks as another user.
  become_user: root # Default username to be used by Ansible

  tasks:
    - name: Update all packages to their latest
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: yes

    - name: Install wget git apache2 and curl
      ansible.builtin.apt:
        name: 
        - wget
        - git
        - curl
        - ufw
        state: latest

    - name: ufw enabled
      community.general.ufw:
        state: "enabled"
        policy: "deny"
        logging: "on"

    - name: ufw rules
      community.general.ufw:
        rule: "allow"
        port: "{{ item }}"
        proto: "tcp"
      with_items:
        - "22"
        - "80"
        - "443"

    - name: Installing Mysql  and dependencies
      package:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - mysql-server
        - mysql-client
        - python3-mysqldb
        - libmysqlclient-dev
      become: yes

    - name: start and enable mysql service
      service:
         name: mysql
         state: started
         enabled: yes

    - name: creating mysql user (ubuntu)
      mysql_user:
        name: ubuntu
        password: ubuntu123
        priv: '*.*:ALL'
        host: '%'
        state: present

    - name: creating project__db
      mysql_db:
        name: project_db
        state: present

    - name: Enable remote login to mysql
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        backup: yes
      notify:
        - Restart mysql

    - name: Install Apache
      apt:
        name: apache2
        state: latest
      become: yes

    - name: restart apache2
      service:
        name: apache2
        state: restarted
        enabled: yes
      become: yes

    - name: Installing Remi Repository
      yum:
      name: https://rpms.remirepo.net/enterprise/remi-release-7.rpm
      state: present

    - name: Installing php
      yum:
      enablerepo: "remi,remi-php80" # If you intent to install a different version of PHP, you can change the repo according. Eg : "remi,remi-php74"
      name:
      - php
      - php-common
      - php-cli
      - php-gd
      - php-curl #You can add or remove PHP extensions according to your choice
      - php-mysqlnd
      - php-fpm
      - php-mysqli
      state: latest

    - name: Install php and other deps
      command: sudo apt install php-cli php-mbstring git unzip -y

    - name: Install composer
      command: curl -sS https://getcomposer.org/installer -o composer-setup.php

    - name: Export composer latest hash as environ. variable 
      command: echo $HASH
      environment:
        HASH: '`curl -sS https://composer.github.io/installer.sig`'

    - name: Setup Composer
      command: php composer-setup.php --install-dir=/usr/local/bin --filename=composer

    - name: Give Composer Permissions
      command: chmod +x /usr/local/bin/composer

      # - name: Clone the Laravel App from Git
      #command: git clone https://github.com/f1amy/laravel-realworld-example-app.git Project

    - name: Install wget package (Debian based)
      action: apt pkg='wget' state=present

- name: cd into the Project dir and install composer
  hosts: altschool-slave
  become: no
  composer:
    command: install
    working_dir: /path/to/Project

- name: Deploy LAMP on a slave using ansible
  hosts: altschool-slave
  become: yes # Perform all the Ansible playbook tasks as another user.
  become_user: root # Default username to be used by Ansible
  tasks:

    - name: Move Project to right folder and deploy
      command: sudo mv Project /var/www && cd /var/www/Project

    - name: Change ownership permissions in the home directory
      command: sudo chown -R www-data:www-data /var/www/Project
      args:
        chdir: /~/

    - name: Change user permissions
      command: sudo chmod -R 775 /var/www/Project/storage

    - name: Change user permissions for bootstrap
      command: sudo chmod -R 775 /var/www/Project/bootstrap/cache

    - name: Copy the env variable
      command: sudo cp .env.example .env

    - name: Change the appropriate values
      ansible.builtin.lineinfile:
        path: /var/www/Project/.env
        regexp: '^APP_NAME='
        line: APP_NAME=padar


  handlers:
    - name: Restart mysql
      service:
        name: mysql
        state: restarted
