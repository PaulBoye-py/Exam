---
- name: Deploy LAMP on a slave using ansible
  hosts: altschool-slave
  remote_user: root
  become: yes

  vars:
    sqlpass: ubuntu123

  tasks:
    - name: Set timezone
      community.general.timezone:
        name: Africa/Lagos


    - name: Set hostname
      shell: hostnamectl set-hostname paul-roju.me

    - name: Update and upgrade all packages
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: yes

    - name: Install python
      shell: apt install python3-pip -y

    - name: Install MySQL
      shell: python3 -m pip install PyMySQL

    - name: Install Cryptography
      shell: pip install cryptography

    - name: Install git
      shell: apt install git -y

    - name: Install dependencies 
      apt:
        name: 
          - lsb-release
          - ca-certificates
          - apt-transport-https
          - software-properties-common
          - gnupg2
          - curl
          - wget
          - debconf-utils
          - libaio1

    - name: Install apache2
      apt:
        name: 
          - apache2
          - apache2-utils

    - name: Install php
      apt_repository:
        repo: ppa:ondrej/php

    - name: Update cache
      apt:
        update_cache: true
        upgrade: true

    - name: Install PHP8 and dependencies
      apt:
        name:
          - php8.1-fpm
          - libapache2-mod-php8.1
          - php8.1-cli
          - php8.1-common
          - php8.1-mysql
          - php8.1-opcache
          - php8.1-soap
          - php8.1-zip
          - php8.1-intl
          - php8.1-bcmath
          - php8.1-xml
          - php8.1-xmlrpc
          - php8.1-curl
          - php8.1-gd
          - php8.1-imagick
          - php8.1-cli
          - php8.1-dev
          - php8.1-imap
          - php8.1-mbstring

    - name: Install composer
      shell: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"

    - name: Composer hash setup
      shell: php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

    - name: Setup composer
      shell: php composer-setup.php

    - name: Unlink composer
      shell: php -r "unlink('composer-setup.php');"

    - name: Move composer.phar file
      shell: mv composer.phar /usr/local/bin/composer

    - name: Setup MySQL
      shell: debconf-set-selections <<EOF
        mysql-apt-config mysql-apt-config/select-server select mysql-8.0
        "mysql-community-server mysql-community-server/root-pass password {{ sqlpass }}"
        "mysql-community-server mysql-community-server/re-root-pass password {{ sqlpass }}"
        EOF

    - name: MySQL Config
      shell: wget --user-agent="Mozilla" -O /tmp/mysql-apt-config_0.8.24-1_all.deb https://dev.mysql.com/get/mysql-apt-config_0.8.24-1_all.deb

    - name: Install MySQL Configurations
      shell: DEBIAN_FRONTEND=noninteractive dpkg -i /tmp/mysql-apt-config_0.8.24-1_all.deb < /dev/null > /dev/null

    - name: Update and upgrade cache
      apt:
        update_cache: true
        upgrade: true

    - name: Implement MySQL Configuration
      shell: DEBIAN_FRONTEND=noninteractive apt-get install mysql-server mysql-client --assume-yes --true-yes < /dev/null > /dev/null

    - name: Create SQL DB
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - CREATE DATABASE laravelapp;

    - name: Create DB User
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - CREATE USER 'laravelapp'@'localhost' IDENTIFIED BY 'laravelapp';

    - name: Grant user all privileges
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - GRANT ALL PRIVILEGES ON laravelapp.* TO 'laravelapp'@'localhost';

    - name: FLUSH User Privileges
      command: 'mysql -ne "{{ item }}"'
      with_items:
        - FLUSH PRIVILEGES;

    - name: Info from PostgreSQL Git
      copy:
        src: /home/skylarng89/github/altschool-cloud-exercises/second_semester_exam/pgsql.sh
        dest: /root
        mode: '0775'

    - name: Bash pgsql
      command: bash /root/pgsql.sh

    - name: Clone Git Laravel App
      git:
        repo: https://github.com/f1amy/laravel-realworld-example-app.git
        dest: /var/www/laravelapp

    - name: Config Laravel App
      copy:
        dest: /var/www/laravelapp/.env
        content: |
          APP_NAME="Laravel App"
          APP_ENV=local
          APP_KEY=
          APP_DEBUG=true
          APP_URL=http://localhost
          APP_PORT=3000

          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug

          DB_CONNECTION=mysql
          DB_HOST=localhost
          DB_PORT=3306
          DB_DATABASE=laravelapp
          DB_USERNAME=laravelapp
          DB_PASSWORD=laravelapp

          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=sync
          SESSION_DRIVER=file
          SESSION_LIFETIME=120

          MEMCACHED_HOST=127.0.0.1

          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379

          MAIL_MAILER=smtp
          MAIL_HOST=mailhog
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_ENCRYPTION=null
          MAIL_FROM_ADDRESS="hello@example.com"
          MAIL_FROM_NAME="${APP_NAME}"

          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false

          PUSHER_APP_ID=
          PUSHER_APP_KEY=
          PUSHER_APP_SECRET=
          PUSHER_APP_CLUSTER=mt1

          MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
          MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

          L5_SWAGGER_GENERATE_ALWAYS=true
          SAIL_XDEBUG_MODE=develop,debug
          SAIL_SKIP_CHECKS=true

    - name: Config laravel app routes
      blockinfile:
        path: /var/www/laravelapp/routes/web.php
        marker: ""
        block: |
          Route::get('/', function () {
            return view('welcome');
          });

    - name: Config Laravel App rules
      copy:
        dest: "/var/www/laravelapp/.htaccess"
        content: |
          <IfModule mod_rewrite.c>
            RewriteEngine On

            RewriteCond %{REQUEST_URI} !^/public/
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteCond %{REQUEST_FILENAME} !-f

            RewriteRule ^(.*)$ /public/$1
            RewriteRule ^(/)?$ public/index.php [L]
          </IfModule>

    - name: Change laravelapp owner permissions
      shell: chown -R root:root /var/www/laravelapp

    - name: Change laravel app file permissions
      shell: chmod -R 0775 /var/www/laravelapp

    - name: Change laravelapp storage owner permissions
      shell: chown -R 0755 /var/www/laravelapp/storage

    - name: Change laravelapp bootstrap owner permissions
      shell: chown -R 0755 /var/www/laravelapp/bootstrap/cache

    - name: Create composer project
      shell: cd /var/www/laravelapp && composer create-project -n

    - name: Artisan migrate
      shell:
        cmd: cd /var/www/laravelapp && php artisan migrate --seed

    - name: Configure Apache for the laravel app
      copy:
        dest: "/etc/apache2/sites-available/laravelapp.conf"
        content: |
          <VirtualHost *:80>
              ServerAdmin email@domain.com
              ServerName subdomain.domain.com
              ServerAlias subdomain.domain.com

              DocumentRoot /var/www/laravelapp/public

              <Directory /var/www/laravelapp/public>
                  Options Indexes FollowSymLinks
                  AllowOverride All
                  Require all granted
              </Directory>

              ErrorLog ${APACHE_LOG_DIR}/error.log
              CustomLog ${APACHE_LOG_DIR}/access.log combined
          </VirtualHost>

    - name: Site config
      shell: a2dissite 000-default.conf

    - name: Laravel app config
      shell: a2ensite laravelapp.conf

    - name: Rewrite enmod
      shell: a2enmod rewrite

    - name: Restart Apache2
      service:
        name: apache2
        state: restarted

    - name: Change owner permissions for laravel app /var
      shell: chown -R www-data:www-data /var/www/laravelapp

    - name: Install snapd
      apt:
        name:
          - snapd

    - name: Install core
      shell: snap install core

    - name: Refresh core
      shell: snap refresh core

    - name: Install certbot
      shell: snap install --classic certbot

    - name: Certbot
      shell: ln -s /snap/bin/certbot /usr/bin/certbot

    - name: Apply certbot
      shell:
        cmd: yes | certbot --apache --agree-tos --redirect -m paul-roju@contact.me -d paul-roju.me -d www.paul-roju.me


